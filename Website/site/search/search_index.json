{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"2D Minecraft is a Software Design Project for a client at Wits University. It aims to incorporate as many dynamics as possible from the base 3D Minecraft game into a 2D version coded entirely in Python. In this version of Minecraft, one can break blocks, place blocks, craft new items using the crafting table and craft the end-game item. Instuctions below detail how one can install the 2D Minecraft game. In addition to the base interactive game, one can also install a gym agent which plays the game by itself! Gym is a Python library which provides a standard API for developing reinforcement learning algorithms. The team used gym to create an agent which takes actions in the minecraft environemnt, receives rewards for the actions it takes and the states it enters and checks to see whether the game has been completed. One is able to create custom tasks which the agent will have to complete and receive a reward thereafter. In addition, you are able to make use of any of the built in tasks that the team has created for you. Group Members 2420656 2303289 2368841 2356115 (scrum master) 2333263 2332853 2393033 2356823 2302891 Project layout SCRUM-DOG-MILLIONAIRES \u2502 setup.py # The configuration file for the package. \u2502 MainGym.py # Gym current setup and runner file \u2502 \u2514\u2500\u2500\u2500Diagrams \u2502 \u2502 ... # Diagrams outlining the implementation \u2502 \u2502 \u2514\u2500\u2500\u2500gym_MC \u2502 \u2502 __init__.py # The environment Config \u2502 \u2502 ... # Other files required by Gym \u2502 \u2502 \u2514\u2500\u2500\u2500Levels \u2502 \u2502 ... # Fallback Levels \u2502 \u2502 \u2514\u2500\u2500\u2500Sound Effects \u2502 \u2502 ... # Sound Effect Files \u2502 \u2502 \u2514\u2500\u2500\u2500Textures \u2502 \u2502 ... # Texture Files \u2502 \u2502 \u2514\u2500\u2500\u2500Website \u2502 \u2502 ... # Website Files \u2502 \u2502 \u2514\u2500\u2500\u2500MainGame \u2502 \u2502 main.py # Main py file for the base interactive game \u2502 \u2502 ... # Website Files Packages used pygame version: 2.1.2 numpy version: latest perlin-noise version: 1.12 gym version: 0.26.1 Installing the package In order to install the package locally, please run this from your local terminal after setting your current working directory using cd /directoy/ . Then run the following command. pip install -e scrumdogmillionaires","title":"Home"},{"location":"#group-members","text":"2420656 2303289 2368841 2356115 (scrum master) 2333263 2332853 2393033 2356823 2302891","title":"Group Members"},{"location":"#project-layout","text":"SCRUM-DOG-MILLIONAIRES \u2502 setup.py # The configuration file for the package. \u2502 MainGym.py # Gym current setup and runner file \u2502 \u2514\u2500\u2500\u2500Diagrams \u2502 \u2502 ... # Diagrams outlining the implementation \u2502 \u2502 \u2514\u2500\u2500\u2500gym_MC \u2502 \u2502 __init__.py # The environment Config \u2502 \u2502 ... # Other files required by Gym \u2502 \u2502 \u2514\u2500\u2500\u2500Levels \u2502 \u2502 ... # Fallback Levels \u2502 \u2502 \u2514\u2500\u2500\u2500Sound Effects \u2502 \u2502 ... # Sound Effect Files \u2502 \u2502 \u2514\u2500\u2500\u2500Textures \u2502 \u2502 ... # Texture Files \u2502 \u2502 \u2514\u2500\u2500\u2500Website \u2502 \u2502 ... # Website Files \u2502 \u2502 \u2514\u2500\u2500\u2500MainGame \u2502 \u2502 main.py # Main py file for the base interactive game \u2502 \u2502 ... # Website Files","title":"Project layout"},{"location":"#packages-used","text":"pygame version: 2.1.2 numpy version: latest perlin-noise version: 1.12 gym version: 0.26.1","title":"Packages used"},{"location":"#installing-the-package","text":"In order to install the package locally, please run this from your local terminal after setting your current working directory using cd /directoy/ . Then run the following command. pip install -e scrumdogmillionaires","title":"Installing the package"},{"location":"addnew/","text":"In order to add new items and crafting recipies into the game you will need to navigate to where you installed main game package. Add new items Go to install_location\\ScrumDogMillionaires\\MainGame\\Items\\items.json Add an entry in the following format: \"itemname:\" { \"itemID\": integer representng item ID, \"itemDisplayName\": \"string representing the in game name of the item\", \"breakTime\": integer representing time in miliseconds needed to break the block, please set to 99999 if the you're adding an item, \"blockHardness\": integer representing what level of tool is neede to break the block, please set to 0 if you're adding an item, \"itemHardness\": inteer representing the level of the tool, please set to 0 if you're adding a block. \"reqToolType\": \"string representing what type of tool is needed to break the block if youre adding an item set it to \"none\"\", \"toolType\":\"string representing what type of tool the item is, if you are adding a item set it to \"none\"\", \"texture\": \"string that is a file path to a png of the texure, please note there is a texture file if you want to put the image there\", \"isPlaceable\": boolean representing if the new item is placeable: false for items; true for blocks, \"drops\": integer representing item id you want this block to drop when broken: set it to itself if you want it to drop itself; -1 if you dont want to drop anything at all; or any other item id in the game } Example: \"dirt_block\": { \"itemID\": 1, \"itemDisplayName\" : \"Dirt Block\", \"breakTime\": 500, \"blockHardness\": 0, \"itemHardness\": 0, \"reqToolType\": \"none\", \"toolType\": \"none\", \"texture\": \"Textures/Blocks/dirt.png\", \"isPlaceable\": true, \"drops\" : 1 }, Please note that if you want the block to spawn in the game naturally you will have to edit the chunk generator code in the chunks file. Add new crafting recipe Go to install_location\\Scrum-Dog-Millionaires\\MainGame\\Recipes\\recipes.json Add an entry in the following format { \"craftingID\": integer representing its ID in the crafting table, \"toolName\": \"string representing the name of the item being crafted\", \"itemID\": integer representing the item ID of the item being crafted, \"craftingAmount\": integer representing the number of items placed in the players inventory when crafted (ie 1 plank becomes 4 logs), \"recipe\": list of items needed for the recipe in the following format [ { \"itemID\": integer representing the item ID of the material, \"numBlocks\": integer reprsendting the amount of this material needed in the recipie } to have more than one item in the crafting recipie add a comma and another item to the list in the same format ], \"shape\": list of item ids, in the position they are in the table in the format as follows [-1,-1,-1 -1,-1,-1, -1,-1,-1] -1 represents a blank position in the crafting table, swap these -1s for the item id of the material that goes in that position } Example: { \"craftingID\" : 1, \"toolName\" : \"Wooden Pickaxe\", \"itemID\" : 11, \"craftingAmount\" : 1, \"recipe\" : [ { \"itemID\": 8, \"numBlocks\" : 5 } ], \"shape\": [8, 8, 8, -1, 8, -1, -1, 8, -1] },","title":"Add new items and crafting recipes"},{"location":"addnew/#add-new-items","text":"Go to install_location\\ScrumDogMillionaires\\MainGame\\Items\\items.json Add an entry in the following format: \"itemname:\" { \"itemID\": integer representng item ID, \"itemDisplayName\": \"string representing the in game name of the item\", \"breakTime\": integer representing time in miliseconds needed to break the block, please set to 99999 if the you're adding an item, \"blockHardness\": integer representing what level of tool is neede to break the block, please set to 0 if you're adding an item, \"itemHardness\": inteer representing the level of the tool, please set to 0 if you're adding a block. \"reqToolType\": \"string representing what type of tool is needed to break the block if youre adding an item set it to \"none\"\", \"toolType\":\"string representing what type of tool the item is, if you are adding a item set it to \"none\"\", \"texture\": \"string that is a file path to a png of the texure, please note there is a texture file if you want to put the image there\", \"isPlaceable\": boolean representing if the new item is placeable: false for items; true for blocks, \"drops\": integer representing item id you want this block to drop when broken: set it to itself if you want it to drop itself; -1 if you dont want to drop anything at all; or any other item id in the game } Example: \"dirt_block\": { \"itemID\": 1, \"itemDisplayName\" : \"Dirt Block\", \"breakTime\": 500, \"blockHardness\": 0, \"itemHardness\": 0, \"reqToolType\": \"none\", \"toolType\": \"none\", \"texture\": \"Textures/Blocks/dirt.png\", \"isPlaceable\": true, \"drops\" : 1 }, Please note that if you want the block to spawn in the game naturally you will have to edit the chunk generator code in the chunks file.","title":"Add new items"},{"location":"addnew/#add-new-crafting-recipe","text":"Go to install_location\\Scrum-Dog-Millionaires\\MainGame\\Recipes\\recipes.json Add an entry in the following format { \"craftingID\": integer representing its ID in the crafting table, \"toolName\": \"string representing the name of the item being crafted\", \"itemID\": integer representing the item ID of the item being crafted, \"craftingAmount\": integer representing the number of items placed in the players inventory when crafted (ie 1 plank becomes 4 logs), \"recipe\": list of items needed for the recipe in the following format [ { \"itemID\": integer representing the item ID of the material, \"numBlocks\": integer reprsendting the amount of this material needed in the recipie } to have more than one item in the crafting recipie add a comma and another item to the list in the same format ], \"shape\": list of item ids, in the position they are in the table in the format as follows [-1,-1,-1 -1,-1,-1, -1,-1,-1] -1 represents a blank position in the crafting table, swap these -1s for the item id of the material that goes in that position } Example: { \"craftingID\" : 1, \"toolName\" : \"Wooden Pickaxe\", \"itemID\" : 11, \"craftingAmount\" : 1, \"recipe\" : [ { \"itemID\": 8, \"numBlocks\" : 5 } ], \"shape\": [8, 8, 8, -1, 8, -1, -1, 8, -1] },","title":"Add new crafting recipe"},{"location":"change/","text":"In order to change game settings you need to go to install_location\\ScrumDogMillionaires\\MainGame\\Settings\\gameSettings.py A list of changeable settings blockSize : an integer representing how many pixels a blocks width and height are Width and Height : integers representing the size of the window in pixels Player range : an integer representing the circular distance around the player that the user can interact with","title":"Settings you can change"},{"location":"change/#a-list-of-changeable-settings","text":"blockSize : an integer representing how many pixels a blocks width and height are Width and Height : integers representing the size of the window in pixels Player range : an integer representing the circular distance around the player that the user can interact with","title":"A list of changeable settings"},{"location":"gymgame/","text":"Setting up the Agent Ensure you have the following code in your file: import gym import gym_MC env = gym.make(\"MinePy-1\", render_mode=\"human\",easyStart=0,seed=1024, spawnLoc=(1024,1024), task=\"1\") obs, info = env.reset(seed=1212) #has to be the same seed as above done=False Setting up new environments render_mode: human : renders the game to a screen. rgb_array : returns the screen as a 2d array of pixel colour values. easyStart: 0: no extra items. 1: player starts with wooden pickaxe and 4 wooden planks. 2: player starts with wooden pickaxe and 4 wooden planks, a stone pickaxe, a diamond and an emerald. seed: integer value that acts as seed for both the world and the AI. spawnLoc: Takes in a pair of ints, and sets the agents spawn location. If none is given, default spawn location is (0,0). Note that on a reset, if no spawn location is given, but one was given in the original initilization, the spawn location will be the one given in the intilization. Also note that the position is in blocks not pixels. task: Number between 1 and 9 that sets the goal of the agent 1 : The agent must collect 2 or more wooden logs. 2 : All the requirements of stage 1 and the agent mut craft 8 or more wooden planks. 3 : All the requirements of stage 2 and the agent must craft 1 or more wooden pickaxes. 4 : All the requirements of stage 3 and the agent must collect 3 stone, as well as have 2 wooden planks in its inventory. 5 : All the requirements of stage 4 and the agent must craft a stone pickaxe. 6 : All the requirements of stage 5 and the agent must collect 36 gold ore, 36 diamond ore and 1 emerald ore. 7 : All the requirements of stage 6 and the agent must craft 9 diamonds, 9 gold ingots and 1 emerald. 8 : All the requirements of stage 7 and the agent must craft 4 diamond blocks and 4 gold blocks. 9 : All the requirements of stage 8 and the agent must craft the end game block. In order to perform an action use the following: env.step(step) where step is an integer value between 0 and 75, representing an action the player can take. 0: no action. 1-4: movement actions. 4-24: break and placing actions. 25-64: change selected item. 65-74: when next to a crafting table, it will craft a specific item. Other functions reset: takes same options as above and resets the game. render: forces game to render. step: takes in an action, steps the agent forward, returns observations, reward, whether or not the game is done, and an dictionary of information, and will render if render mode is set to human.","title":"Using the Gym Agent"},{"location":"gymgame/#setting-up-the-agent","text":"Ensure you have the following code in your file: import gym import gym_MC env = gym.make(\"MinePy-1\", render_mode=\"human\",easyStart=0,seed=1024, spawnLoc=(1024,1024), task=\"1\") obs, info = env.reset(seed=1212) #has to be the same seed as above done=False","title":"Setting up the Agent"},{"location":"gymgame/#setting-up-new-environments","text":"render_mode: human : renders the game to a screen. rgb_array : returns the screen as a 2d array of pixel colour values. easyStart: 0: no extra items. 1: player starts with wooden pickaxe and 4 wooden planks. 2: player starts with wooden pickaxe and 4 wooden planks, a stone pickaxe, a diamond and an emerald. seed: integer value that acts as seed for both the world and the AI. spawnLoc: Takes in a pair of ints, and sets the agents spawn location. If none is given, default spawn location is (0,0). Note that on a reset, if no spawn location is given, but one was given in the original initilization, the spawn location will be the one given in the intilization. Also note that the position is in blocks not pixels. task: Number between 1 and 9 that sets the goal of the agent 1 : The agent must collect 2 or more wooden logs. 2 : All the requirements of stage 1 and the agent mut craft 8 or more wooden planks. 3 : All the requirements of stage 2 and the agent must craft 1 or more wooden pickaxes. 4 : All the requirements of stage 3 and the agent must collect 3 stone, as well as have 2 wooden planks in its inventory. 5 : All the requirements of stage 4 and the agent must craft a stone pickaxe. 6 : All the requirements of stage 5 and the agent must collect 36 gold ore, 36 diamond ore and 1 emerald ore. 7 : All the requirements of stage 6 and the agent must craft 9 diamonds, 9 gold ingots and 1 emerald. 8 : All the requirements of stage 7 and the agent must craft 4 diamond blocks and 4 gold blocks. 9 : All the requirements of stage 8 and the agent must craft the end game block. In order to perform an action use the following: env.step(step) where step is an integer value between 0 and 75, representing an action the player can take. 0: no action. 1-4: movement actions. 4-24: break and placing actions. 25-64: change selected item. 65-74: when next to a crafting table, it will craft a specific item.","title":"Setting up new environments"},{"location":"gymgame/#other-functions","text":"reset: takes same options as above and resets the game. render: forces game to render. step: takes in an action, steps the agent forward, returns observations, reward, whether or not the game is done, and an dictionary of information, and will render if render mode is set to human.","title":"Other functions"},{"location":"maingame/","text":"Playing the Game In order to play the base interactive game, please run the following command after installing the package, within the games main directory: /SCRUM-DOG-MILLIONAIRES/ python3 main.py Once you open the game, you are greeted with a main start screen. Here you can enter the seed in the top left corner. The seed can either be a string or an integer. In the top right corner, a question mark button is found. When you click here, details on the controls of the game will appear. Clicking on begin game allows you to be moved into the playable game. Please see the screenshots below for a visual guide. Demo of the game screens Instructions for playing How to craft In order to craft new blocks and tools, the player will have to be in range of the crafting table and then right click on the crafting table block. One should then drag the blocks from the inventory into the crafting table. If the blocks are positioned in the correct position to craft an item, the question mark will display the item you are able to create. To create the item and add it to your inventory, click on 'craft' which will now be green. If the blocks are not positioned in an arrangement which corresponds to any craftable item or the player does not have enough blocks, then 'craft' will remain white and the question mark will still be displayed. Breaking Blocks Each block has a different hardness and some require stronger tools in order to be broken. Blocks that can be broken with hands: dirt grass wooden logs leaves Blocks that can be broken with a wooden pickaxe: all blocks that can be broken with hands stone Blocks that can be broken with stone pickaxe: all blocks that can be broken with hands all blocks that can be broken with wooden pickaxe diamond gold emerald iron Craftable items 1 wooden log crafts 4 wooden planks 5 wooden planks crafts 1 wooden pickaxe 3 stones and 2 wooden planks crafts 1 stone pickaxe 1 gold ore crafts 1 gold ingot 1 diamond ore crafts 1 diamond 1 emerald ore crafts 1 emerald 9 diamonds crafts 1 diamond block 9 gold ingots crafts 1 gold block 4 gold blocks, 4 diamond blocks and 1 emerald crafts 1 end game block","title":"Playing the interactive game"},{"location":"maingame/#playing-the-game","text":"In order to play the base interactive game, please run the following command after installing the package, within the games main directory: /SCRUM-DOG-MILLIONAIRES/ python3 main.py Once you open the game, you are greeted with a main start screen. Here you can enter the seed in the top left corner. The seed can either be a string or an integer. In the top right corner, a question mark button is found. When you click here, details on the controls of the game will appear. Clicking on begin game allows you to be moved into the playable game. Please see the screenshots below for a visual guide.","title":"Playing the Game"},{"location":"maingame/#demo-of-the-game-screens","text":"","title":"Demo of the game screens"},{"location":"maingame/#instructions-for-playing","text":"","title":"Instructions for playing"},{"location":"maingame/#how-to-craft","text":"In order to craft new blocks and tools, the player will have to be in range of the crafting table and then right click on the crafting table block. One should then drag the blocks from the inventory into the crafting table. If the blocks are positioned in the correct position to craft an item, the question mark will display the item you are able to create. To create the item and add it to your inventory, click on 'craft' which will now be green. If the blocks are not positioned in an arrangement which corresponds to any craftable item or the player does not have enough blocks, then 'craft' will remain white and the question mark will still be displayed.","title":"How to craft"},{"location":"maingame/#breaking-blocks","text":"Each block has a different hardness and some require stronger tools in order to be broken.","title":"Breaking Blocks"},{"location":"maingame/#blocks-that-can-be-broken-with-hands","text":"dirt grass wooden logs leaves","title":"Blocks that can be broken with hands:"},{"location":"maingame/#blocks-that-can-be-broken-with-a-wooden-pickaxe","text":"all blocks that can be broken with hands stone","title":"Blocks that can be broken with a wooden pickaxe:"},{"location":"maingame/#blocks-that-can-be-broken-with-stone-pickaxe","text":"all blocks that can be broken with hands all blocks that can be broken with wooden pickaxe diamond gold emerald iron","title":"Blocks that can be broken with stone pickaxe:"},{"location":"maingame/#craftable-items","text":"1 wooden log crafts 4 wooden planks 5 wooden planks crafts 1 wooden pickaxe 3 stones and 2 wooden planks crafts 1 stone pickaxe 1 gold ore crafts 1 gold ingot 1 diamond ore crafts 1 diamond 1 emerald ore crafts 1 emerald 9 diamonds crafts 1 diamond block 9 gold ingots crafts 1 gold block 4 gold blocks, 4 diamond blocks and 1 emerald crafts 1 end game block","title":"Craftable items"}]}