{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"2D Minecraft is a Software Design Project for a client at Wits University. It aims to incorporate as many dynamics as possible from the base 3D Minecraft game into a 2D version coded entirely in Python. In this version of Minecraft, one can break blocks, place blocks, craft new items using the crafting table and craft the end-game item. Instuctions below detail how one can install the 2D Minecraft game. In addition to the base interactive game, one can also install a gym agent which plays the game by itself! Gym is a Python library which provides a standard API for developing reinforcement learning algorithms. The team used gym to create an agent which takes actions in the minecraft environemnt, receives rewards for the actions it takes and the states it enters and checks to see whether the game has been completed. One is able to create custom tasks which the agent will have to complete and receive a reward. In addition, you are able to make use of any of the built in tasks that the team has created for you. Group Members Justin Knopfmacher (scrum master) - 2356115 Lior Becker - 2333263 Luciano Meixieira - 2332853 Michaela Klug - 2393033 Benjamin Servant - 2420656 Wen Guan Gavin Chen - 2302891 Damion Harvey - 2303289 Stuart Groves - 2356823 Jeremy Stott - 2368841 Project layout SCRUM-DOG-MILLIONAIRES \u2502 setup.py # The configuration file for the package. \u2502 MainGym.py # Gym current setup and runner file \u2502 \u2514\u2500\u2500\u2500Diagrams \u2502 \u2502 ... # Diagrams outlining the implementation \u2502 \u2502 \u2514\u2500\u2500\u2500gym_MC \u2502 \u2502 __init__.py # The environment Config \u2502 \u2502 ... # Other files required by Gym \u2502 \u2502 \u2514\u2500\u2500\u2500Levels \u2502 \u2502 ... # Fallback Levels \u2502 \u2502 \u2514\u2500\u2500\u2500Sound Effects \u2502 \u2502 ... # Sound Effect Files \u2502 \u2502 \u2514\u2500\u2500\u2500Textures \u2502 \u2502 ... # Texture Files \u2502 \u2502 \u2514\u2500\u2500\u2500Website \u2502 \u2502 ... # Website Files \u2502 \u2502 \u2514\u2500\u2500\u2500MainGame \u2502 \u2502 main.py # Main py file for the base interactive game \u2502 \u2502 ... # Website Files Packages used pygame version: 2.1.2 numpy version: latest perlin-noise version: 1.12 gym version: 0.26.1 Installing the package In order to install the package locally, please run this from your local terminal after setting your current working directory using cd /directoy/ . Then run the following command. pip install -e scrumdogmillionaires Setting up the Gym Agent pip install -e scrumdogmillionaires","title":"Home"},{"location":"#group-members","text":"Justin Knopfmacher (scrum master) - 2356115 Lior Becker - 2333263 Luciano Meixieira - 2332853 Michaela Klug - 2393033 Benjamin Servant - 2420656 Wen Guan Gavin Chen - 2302891 Damion Harvey - 2303289 Stuart Groves - 2356823 Jeremy Stott - 2368841","title":"Group Members"},{"location":"#project-layout","text":"SCRUM-DOG-MILLIONAIRES \u2502 setup.py # The configuration file for the package. \u2502 MainGym.py # Gym current setup and runner file \u2502 \u2514\u2500\u2500\u2500Diagrams \u2502 \u2502 ... # Diagrams outlining the implementation \u2502 \u2502 \u2514\u2500\u2500\u2500gym_MC \u2502 \u2502 __init__.py # The environment Config \u2502 \u2502 ... # Other files required by Gym \u2502 \u2502 \u2514\u2500\u2500\u2500Levels \u2502 \u2502 ... # Fallback Levels \u2502 \u2502 \u2514\u2500\u2500\u2500Sound Effects \u2502 \u2502 ... # Sound Effect Files \u2502 \u2502 \u2514\u2500\u2500\u2500Textures \u2502 \u2502 ... # Texture Files \u2502 \u2502 \u2514\u2500\u2500\u2500Website \u2502 \u2502 ... # Website Files \u2502 \u2502 \u2514\u2500\u2500\u2500MainGame \u2502 \u2502 main.py # Main py file for the base interactive game \u2502 \u2502 ... # Website Files","title":"Project layout"},{"location":"#packages-used","text":"pygame version: 2.1.2 numpy version: latest perlin-noise version: 1.12 gym version: 0.26.1","title":"Packages used"},{"location":"#installing-the-package","text":"In order to install the package locally, please run this from your local terminal after setting your current working directory using cd /directoy/ . Then run the following command. pip install -e scrumdogmillionaires","title":"Installing the package"},{"location":"#setting-up-the-gym-agent","text":"pip install -e scrumdogmillionaires","title":"Setting up the Gym Agent"},{"location":"gymgame/","text":"Setting up the Agent Creating new rewards Using built in tasks for the agent Adding new tasks for the agent Setting up new environments","title":"Using the Gym Agent"},{"location":"gymgame/#setting-up-the-agent","text":"","title":"Setting up the Agent"},{"location":"gymgame/#creating-new-rewards","text":"","title":"Creating new rewards"},{"location":"gymgame/#using-built-in-tasks-for-the-agent","text":"","title":"Using built in tasks for the agent"},{"location":"gymgame/#adding-new-tasks-for-the-agent","text":"","title":"Adding new tasks for the agent"},{"location":"gymgame/#setting-up-new-environments","text":"","title":"Setting up new environments"},{"location":"maingame/","text":"Playing the Game In order to play the base interactive game, please run the following command after installing the package, within the games main directory: /SCRUM-DOG-MILLIONAIRES/ python3 main.py Once you open the game, you are greeted with a main start screen. Here you can enter the seed in the top left corner. The seed can either be a string or an integer. In the top right corner, a question mark button is found. When you click here, details on the controls of the game will appear. Clicking on begin game allows you to be moved into the playable game. Please see the screenshots below for a visual guide. Demo of the game screens Instructions for playing","title":"Playing the interactive game"},{"location":"maingame/#playing-the-game","text":"In order to play the base interactive game, please run the following command after installing the package, within the games main directory: /SCRUM-DOG-MILLIONAIRES/ python3 main.py Once you open the game, you are greeted with a main start screen. Here you can enter the seed in the top left corner. The seed can either be a string or an integer. In the top right corner, a question mark button is found. When you click here, details on the controls of the game will appear. Clicking on begin game allows you to be moved into the playable game. Please see the screenshots below for a visual guide.","title":"Playing the Game"},{"location":"maingame/#demo-of-the-game-screens","text":"","title":"Demo of the game screens"},{"location":"maingame/#instructions-for-playing","text":"","title":"Instructions for playing"}]}